{"version":3,"sources":["E:/Rajendra/Azure-IOT/HCLMotorWebApp/src async","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/CSS/app.component.css","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Plant/PlantComponent.html","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Plant/PlantComponent.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Plant/hclplantdashboard.html","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Plant/hclplantdashboard.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Station/StationComponent.html","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Station/StationComponent.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/base-chart/base-chart.component.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/motor-status-chart/motor-status-chart.component.html","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/motor-status-chart/motor-status-chart.component.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/notifications/notifications.component.html","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/notifications/notifications.component.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/pi-chart/pi-chart.component.html","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/pi-chart/pi-chart.component.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Services/MotorService.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Services/NotificationService.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Services/PlantService.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Services/StationService.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/app.component.html","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/app.component.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/app.module.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/components/stationlist/stationlist.component.html","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/components/stationlist/stationlist.component.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/environments/environment.ts","E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  \\r\\n\\r\\n  \\r\\n  .app-header \\r\\n  {\\r\\n\\t  background-color: black; /* #0D47A1; */\\r\\n  }\\r\\n  \\r\\n  .app-footer \\r\\n  {\\r\\n\\t  background-color: black;\\r\\n  }\\r\\n  \\r\\n  .main-container \\r\\n  {\\r\\n\\t background-color:lavender; \\r\\n\\t min-height:520px\\r\\n  }\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n.circle  { \\r\\n  padding: 10px 25px 10px 10px;\\r\\n  \\r\\n  height: -4px;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n.nopadding {\\r\\n  padding: 0 !important;\\r\\n  margin: 6px !important;\\r\\n}\\r\\n\\r\\n.Red\\r\\n{\\r\\n  background-color: red;\\r\\n}\\r\\n\\r\\n.Green\\r\\n{\\r\\n  background-color: green;\\r\\n}\\r\\n\\r\\n.Amber\\r\\n{\\r\\n  background-color: #FFC200 ;\\r\\n}\\r\\n\\r\\n\\r\\n.status-padding\\r\\n{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.btn-separator {\\r\\n  border-right: 1px solid gray;\\r\\n}\\r\\n\\r\\n\\r\\n.box-content {\\r\\n  display: inline-block;\\r\\n  width: 30%;\\r\\n  \\r\\n}\\r\\n\\r\\n.bottom {\\r\\n  border-bottom: 1px solid #ccc;\\r\\n}\\r\\n\\r\\n.right {\\r\\n  border-right: 1px solid #ccc;\\r\\n}\\r\\n\\r\\n\\r\\n.circle-small  { \\r\\n  \\r\\n  padding: 1px 11px 2px 8px;\\r\\n  \\r\\n  height: -4px;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n #pichartdiv {\\r\\n /* width: 400px; */\\r\\n  height: 200px;\\r\\n  margin: 0 auto;\\r\\n  /*border: 5px dotted #ccc;*/\\r\\n}\\r\\n\\r\\n#chartdiv {\\r\\n /* width: 300px;*/\\r\\n  height: 150px;\\r\\n  margin: 0 auto;  \\r\\n}\\r\\n\\r\\n@media  (min-width:786px) \\r\\n {\\r\\n    .chart-panel .panel \\r\\n  {\\r\\n   /* width: 170px !important; */\\r\\n  }\\r\\n }\\r\\n.status-chart \\r\\n{\\r\\n  height: 230px;\\r\\n\\r\\n}\\r\\n\\r\\n.margin-left { margin-left: 18px !important; }\\r\\n\\r\\n.plant-alert ul li { list-style: none; line-height: 30px; }\\r\\n\\r\\n.plant-alert  .critical-alert span { color: #FF0000 } \\r\\n\\r\\n.plant-alert  .normal-alert span { color: #008000} \\r\\n\\r\\n.plant-alert  .warning-alert span {color: #FFC200 } \\r\\n\\r\\n\\r\\n.panel-footer, .panel-primary .panel-heading \\r\\n { background-color: #BDBDBD !important ;\\r\\n   border-color: #BDBDBD !important;\\r\\n }\\r\\n .panel-primary {\\r\\n  border-color: #BDBDBD !important;\\r\\n  \\r\\n}\\r\\n\\r\\n#app-header h1,h2 { margin-top: 0;margin-bottom: 0 }\\r\\n\\r\\n.plant-alert ul { margin-left: -36px; }\\r\\n\\r\\n.body-container { padding-left:60px; }\\r\\n\\r\\n\\r\\n/* style for popup */\\r\\n\\r\\n\\r\\n.popover-content {\\r\\n   \\r\\n  min-width: 250px;\\r\\n  padding-left: 25px;\\r\\n  \\r\\n   \\r\\n}\\r\\n\\r\\n.popover-content ul { list-style: none; margin-left: -50px; }\\r\\n\\r\\n.popover-content ul li:nth-child(odd) { background: #ECF0F1; }\\r\\n\\r\\n.popover-content ul li {line-height: 30px;}\\r\\n\\r\\n.popover-content ul li span.circle-small {  width: 140px; }\\r\\n\\r\\n.popover-title {\\r\\n  background-color: #BDBDBD !important; \\r\\n  color: #FFFFFF; \\r\\n  font-size: 14px;\\r\\n  text-align:center;\\r\\n} \\r\\n\\r\\n \\r\\na[title='JavaScript charts'] \\r\\n{\\r\\ndisplay:none;\\r\\n}\\r\\n/* style for popup */\\r\\n\\r\\n.plant-notification .panel-body {min-height:  229px }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/CSS/app.component.css\n// module id = ../../../../../src/app/CSS/app.component.css\n// module chunks = 1","module.exports = \"\\r\\n <div class=\\\"panel-inline-group  \\\">\\r\\n       \\r\\n\\r\\n   <div class=\\\"col-md-11  panel panel-primary margin-left \\\" style='padding:12px;'>\\r\\n           \\r\\n    <!-- display station list -->\\r\\n        <stations  ></stations>         \\r\\n   </div>\\r\\n     \\r\\n <div class='chart-panel col-md-12 ' >\\r\\n\\r\\n            <!-- Overall Motor Status -->\\r\\n          <div class=\\\"col-md-4  panel panel-primary nopadding\\\" >              \\r\\n               <motor-status-chart ></motor-status-chart>              \\r\\n          </div> \\r\\n\\r\\n            <!-- Overall Station Status -->\\r\\n          <div class=\\\"col-md-4  panel panel-primary nopadding\\\" >   \\r\\n                <pi-chart></pi-chart>           \\r\\n          </div>\\r\\n\\r\\n            <!-- Plant Notifications -->\\r\\n          <div class=\\\"col-md-3  panel panel-primary nopadding plant-alert\\\" >   \\r\\n                <notifications></notifications>\\r\\n          </div>\\r\\n          \\r\\n      \\r\\n       <div class=\\\"col-md-11  panel panel-primary  nopadding  \\\"  >            \\r\\n                <span class=\\\"col-md-3 box-content right   \\\"><small><strong>Risk Index(RI)</strong> scale :1-5</small> </span>  \\r\\n                 \\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                <span class=\\\"circle-small Green  \\\"></span>  \\r\\n                <span >Normal</span>  \\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                <span class=\\\"circle-small Red \\\"></span>  \\r\\n                <span>Critical</span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                <span class=\\\"circle-small Amber \\\"></span>  \\r\\n                <span>Warning</span>\\r\\n            </div>\\r\\n       </div>\\r\\n\\r\\n\\r\\n </div>\\r\\n       \\r\\n      \\r\\n\\r\\n\\r\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Plant/PlantComponent.html\n// module id = ../../../../../src/app/Components/Plant/PlantComponent.html\n// module chunks = 1","import { Component,Input } from '@angular/core';\r\n \r\n\r\n\r\nimport { OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'PlantComponent',\r\n  templateUrl: './PlantComponent.html',\r\n  \r\n   \r\n})\r\n  \r\n \r\n\r\nexport class PlantComponent implements OnInit  {     \r\n      ngOnInit(): void {      \r\n      }\r\n       \r\n    \r\n \r\n\t}\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Plant/PlantComponent.ts","module.exports = \"<!--The whole content below can be removed with the new code.-->\\n \\n  \\n \\n<!-- <li *ngFor=\\\" let plant of plantlist\\\" (click)=\\\"Onselect(hero)\\\" [class.selected]=\\\"hero === selectedHero\\\">\\n    <span class=\\\"badge\\\">{{hero.id}}</span> {{hero.name}}\\n</li>\\n--> \\n<div >\\n  \\n    <PlantComponent></PlantComponent>\\n   \\n    \\n   \\n     \\n</div>\\n\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Plant/hclplantdashboard.html\n// module id = ../../../../../src/app/Components/Plant/hclplantdashboard.html\n// module chunks = 1","import { Component,Input } from '@angular/core';\r\n\r\nimport {  PlantService} from '../../Services/PlantService';\r\nimport {  Plant} from '../../Entities/Plant';\r\n\r\nimport {  StationService} from '../../Services/StationService';\r\nimport {  Station} from '../../Entities/Station';\r\nimport { StationComponent } from '../Station/StationComponent';\r\n\r\n\r\nimport { OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'hclplantdashboard',\r\n  templateUrl: './hclplantdashboard.html'\r\n   \r\n})\r\n\t\r\nexport class hclplantdashboard implements OnInit  {\r\n\r\n      constructor ()\r\n      {\r\n         \r\n      }\r\n          \r\n      @Input() currentPlantId : number;\r\n      stationlist :Station[];\r\n\r\n       \r\n      ngOnInit(): void {      \r\n        \r\n              \r\n      }\r\n       \r\n     \r\n\t}\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Plant/hclplantdashboard.ts","module.exports = \"  <div>\\r\\n\\r\\n    Rajendra\\r\\n\\r\\n    <a routerLink=\\\"/plant\\\"  >clilck me </a>\\r\\n\\r\\n\\r\\n\\r\\n    <a  data-toggle=\\\"popover\\\" title=\\\"\\\" data-placement=\\\"\\\" data-content=\\\"\\\"> \\r\\n\\r\\n        dddddd\\r\\n    </a>   \\r\\n        \\r\\n \\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Station/StationComponent.html\n// module id = ../../../../../src/app/Components/Station/StationComponent.html\n// module chunks = 1","import { Component,Input } from '@angular/core';\r\n\r\nimport {  PlantService} from '../../Services/PlantService';\r\n\r\n\r\nimport { OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'StationComponent',\r\n  templateUrl: './StationComponent.html',\r\n  \r\n   \r\n})\r\n\t\r\nexport class StationComponent implements OnInit  {\r\n\r\n      constructor (private ps :PlantService)\r\n      {\r\n         \r\n      }\r\n          \r\n      @Input() currentStationId : number;\r\n      \r\n\r\n       \r\n      ngOnInit(): void {      \r\n       \r\n        if(this.currentStationId== null)\r\n            { \r\n              this.currentStationId=1;   \r\n            }\r\n        \r\n       //  this.GetStationListForPlant();         \r\n      }\r\n       \r\n    /*  GetStationListForPlant() :void\r\n      {   \r\n             \r\n      this.ss.GetStationListforPlant(this.currentPlantId).then(data => this.stationlist = data);     \r\n      }*/\r\n\r\n\t}\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/Station/StationComponent.ts","\n\nimport { Component, OnInit} from '@angular/core';\ndeclare var google:any;\n@Component({\n  selector: 'chart',\n  template: ``\n})\nexport class BaseChartComponent implements OnInit {\n  private static googleLoaded:any;\n\n  constructor(  ){\n      console.log(\"Here is GoogleChartComponent\")\n  }\n\n  getGoogle() {\n      return google;\n  }\n  ngOnInit() {\n    \n    if(!BaseChartComponent.googleLoaded) {\n      BaseChartComponent.googleLoaded = true;\n      google.charts.load('current',  {packages: ['corechart', 'bar']});\n    }\n   // google.charts.setOnLoadCallback(() => this.drawGraph());\n \n  }\n\n  drawGraph(){\n      console.log(\"DrawGraph base class!!!! \");\n  }\n\n  createBarChart(element:any):any {\n      return new google.visualization.PieChart(element);\n  }\n\n  createDataTable(array:any[]):any {\n      return google.visualization.arrayToDataTable(array);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/base-chart/base-chart.component.ts","module.exports = \"  <div class='overall-motor-status'>\\n      <div class=\\\"panel-heading text-center\\\">Overall Motor Status  </div>\\n      <div class=\\\"panel-body status-chart\\\">\\n          <span id=\\\"donutChart\\\" ></span>    \\n      </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/motor-status-chart/motor-status-chart.component.html\n// module id = ../../../../../src/app/Components/motor-status-chart/motor-status-chart.component.html\n// module chunks = 1","\nimport { Component, OnInit ,Input } from '@angular/core';\nimport { BaseChartComponent} from '../base-chart/base-chart.component';\nimport {  Station} from '../../Entities/Station';\n\nimport {  MotorService} from '../../Services/MotorService';\n \n@Component({\n  selector: 'motor-status-chart',\n  templateUrl: './motor-status-chart.component.html' \n     \n})\nexport class MotorStatusChartComponent  extends BaseChartComponent {\n\n   stationlist : Station[] ;\n   station:Station;\n  private options;\n  private data;\n  private chart;  \n\n  v:any;\n  constructor(private ss :MotorService ){ \n    \n    super();        \n    this.getStationStatus();\n   \n  }\n\n  getStationStatus(){\n    this.ss.getOverAllMotorStatus(2,-1).subscribe(result =>{ this.v=result; this.drawGraph() }) ;     \n     \n  }\n\n   \n  drawGraph(){\n\n     \n    console.log(\"DrawGraph Evolution...\");  \n\n    /* var v = [\n      ['StationHealth', 'NumOfStation'],\n      ['Green',     500],\n      ['Amber',     200],\n      ['Red',  20]\n    ]\n    */\n   \n    this.data = this.createDataTable(this.v );\n\n    this.options = {\n      /*title: 'Evolution, 2014', */\n      chartArea:{left:0,top:0,width:\"1000\",height:\"500\"} ,\n      hAxis: {\n        title: 'Value in USD',\n        minValue: 0\n      } ,\n      'legend':'none',\n      vAxis: {\n        title: 'Members'\n      },\n      \"colors\":[\"#008000\",\"#FFC200\", \"#FF0000\"],\n      'width':300,\n      'height':200, \n        pieHole: 0.4   \n     \n\n    };\n\n    this.chart = this.createBarChart(document.getElementById('donutChart'));\n    this.chart.draw(this.data, this.options);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/motor-status-chart/motor-status-chart.component.ts","module.exports = \"\\n<div class='plant-notification'>\\n<div class=\\\"panel-heading text-center \\\">Plant Notification  </div>\\n<div class=\\\"panel-body\\\">\\n   \\n      <ul>\\n          <li class=\\\"{{notification['Status']}}-alert\\\"  *ngFor=\\\" let notification of notificationlist\\\" >\\n              <span class=\\\"glyphicon glyphicon-alert\\\"></span>  \\n              <a href=\\\"#\\\" >{{notification['Subject']}}</a>\\n          </li>\\n            <li class='critical-alert'>\\n                  <span class=\\\"glyphicon glyphicon-alert\\\"></span>  \\n                <a href=\\\"#\\\" >Station A Critical Alert</a>\\n          </li>\\n          <li class='warning-alert'>\\n                 <span class=\\\"glyphicon glyphicon-alert\\\"></span>  \\n                 <a href=\\\"#\\\" >Station B Warning Alert</a>\\n           </li>\\n           <li class='normal-alert'>\\n            <span class=\\\"glyphicon glyphicon-alert\\\"></span>  \\n            <a href=\\\"#\\\"> Station C Motor going Normal</a>\\n      </li>\\n      \\n            \\n\\n                                \\n      </ul>\\n</div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/notifications/notifications.component.html\n// module id = ../../../../../src/app/Components/notifications/notifications.component.html\n// module chunks = 1","import { Component,Input } from '@angular/core';\nimport { NotificationService} from '../../Services/NotificationService'; \n\nimport { OnInit} from '@angular/core';\n@Component({\n  selector: 'notifications',\n  templateUrl: './notifications.component.html' \n})\n \n\nexport class NotificationsComponent implements OnInit  {\n\n      constructor (private ss :NotificationService)\n      {       \n         \n      }\n          \n      @Input() currentPlantId : number;    \n      notificationlist : any;\n           \n      ngOnInit(): void {      \n        \n         if(this.currentPlantId== null)\n         { \n              this.currentPlantId=2;   \n         }      \n         this.GetStationListForPlant();           \n      }\n       \n     GetStationListForPlant() :void\n      {                \n      this.ss.GetNotificationList(this.currentPlantId,-1,-1).subscribe(data => this.notificationlist = data); \n      \n  \n      }\n \n\t}\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/notifications/notifications.component.ts","module.exports = \"\\n<div class=\\\"panel-heading text-center\\\">Overall Station Status  </div>\\n<div class=\\\"panel-body status-chart\\\">\\n  <span id=\\\"piechart\\\" ></span>    \\n       \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/pi-chart/pi-chart.component.html\n// module id = ../../../../../src/app/Components/pi-chart/pi-chart.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { BaseChartComponent} from '../base-chart/base-chart.component';\n\nimport {  StationService} from '../../Services/StationService';\n\n@Component({\n  selector: '<pi-chart>',\n  templateUrl: './pi-chart.component.html' \n   \n})\nexport class PiChartComponent  extends BaseChartComponent {\n  private options;\n  private data;\n  private chart;\n \n  v:any;\n  charttype :string\n  constructor (private ss :StationService)\n  { super();\n    this.getStationStatus();\n     }\n\n    getStationStatus(){\n    this.ss.getStationStatus(2).subscribe(result =>{ this.v=result;\n      this.drawGraph() }) ;     \n     \n  }\n\n  drawGraph(){\n    console.log(\"DrawGraph ...\");  \n    \n    /*var v = [\n      ['StationHealth', 'NumOfStation'],\n      ['Green',     500],\n      ['Amber',     200],\n      ['Red',  20]\n    ]\n   */\n    this.data = this.createDataTable(this.v );\n\n    this.options = {\n      /*title: 'Evolution, 2014', */\n      chartArea:{left:0,top:0,width:\"1000\",height:\"500\"} ,\n      hAxis: {\n        title: 'Value in USD',\n        minValue: 0\n      },\n      is3D: true,\n      'legend':'none',\n      vAxis: {\n        title: 'Members'\n      },\n      \"colors\":[\"#008000\",\"#FFC200\", \"#FF0000\"],\n      'width':300,\n      'height':200, \n     \n\n    };\n\n    this.chart = this.createBarChart(document.getElementById('piechart'));\n    this.chart.draw(this.data, this.options);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Components/pi-chart/pi-chart.component.ts","import  {  Injectable }  from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n \r\nimport{Observable } from 'rxjs/Rx';\r\n  \r\n\r\n//the injectable attribute to generate the metadata to make the service available through \r\n//Dependency Injustion(DI) in other modules.\r\n\r\n\r\n@Injectable()\r\nexport class MotorService\r\n{\r\n\t\r\n\tprivate static serviceInstance :MotorService =null; \r\n\tprivate testv :string;\r\n\tconstructor(private http: Http) { \r\n\t\t \t\t\r\n\t }\r\n\r\n\t // Return the instance of the service\r\n\t public static getInstance(http: Http): MotorService {\r\n\t\tif (MotorService.serviceInstance === null) {\r\n\t\t\tMotorService.serviceInstance = new MotorService(http);\r\n\t\t}\r\n\t\treturn MotorService.serviceInstance;\r\n\t  } \r\n\t \r\n   private MotorUrl='http://hclmotorstorageaccount.table.core.windows.net:80/Motors?st=2017-09-05T06%3A51%3A00Z&se=2018-05-31T06%3A51%3A00Z&sp=raud&sv=2016-05-31&tn=motors&sig=PBk%2Fro6cKB7%2F5rqpJxOId81P6jwyYglcgZZFnerjidw%3D'\r\n  \r\n  \r\n    \r\n    public GetMotorList(plantid:number,stationId:number) :Observable<any>  { \r\n        return this.http.get(this.MotorUrl)\t \r\n        .map(res => this.GetJsonData(res,plantid,stationId) );\r\n    }\r\n\r\n    public getOverAllMotorStatus(plantid:number,stationId:number):Observable<any>{ \t \r\n    return this.http.get(this.MotorUrl)\r\n    .map(res=>this.CalculateMotorStatus(res,plantid,stationId));\r\n    }\r\n    \r\n  \r\n\tprivate  GetJsonData(xmldata,plantid,stationId)\r\n\t{\r\n\t   \r\n         let jsonobject = xmldata.json()['value'] // [0] ['StationObeject'];\r\n         \r\n       \r\n \r\n\t\t let finalData=\"[\";\r\n\r\n\t\t if( jsonobject && jsonobject !== \"null\" && jsonobject !== \"undefined\" )\r\n\t\t\t{\r\n\t\t\t\tfor(let i=0 ;i <jsonobject.length;i++ )\r\n\t\t\t\t{\r\n                    \r\n                  //  let stObject= JSON.parse( jsonobject[i]['MotorObeject']);\r\n                   \r\n\t\t\t\t\tlet status= jsonobject[i]['Status'];\r\n\t\t\t\t\tlet RI= jsonobject[i]['RI'];\r\n                    let StationId= jsonobject[i]['StationId'];\r\n                    let MotorId= jsonobject[i]['Id'];\r\n                    let PlantId= jsonobject[i]['PlantId'];\r\n                    \r\n                   \r\n\t\t\t\t/*\tif(( stObject && stObject !== \"null\" && stObject !== \"undefined\" ) )\r\n\t\t\t\t\t{ */\r\n                        \r\n                     \r\n        finalData =finalData+ '{\"Id\":'+ MotorId +', \"Name\":\"'+ \"stObject.Name\" +'\", \"StationName\":\"'+ \"stObject.StationName\" +'\", \"SerialNumber\":\"'+ \"stObject.SerialNumber\";\r\n        finalData =finalData+ '\",\"PlantId\" :'+PlantId+', \"Status\":\"'+status +'\", \"Location\":\"'+ \"stObject.Location\"\r\n        finalData =finalData+'\",\"RI\":'+ RI+', \"Description\":\"'+ \"stObject.Description\"+'\", \"StationId\":'+StationId +'  }';\r\n        \r\n\t\t\t\t\t\t\tif(i < jsonobject.length-1 )\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfinalData =finalData+\",\";\r\n\t\t\t\t\t\t\t\t}\r\n                /*   }*/\r\n                \r\n               // alert(finalData);\r\n\t\t\t\t\t}\r\n\t\t\t\tfinalData =finalData+\"]\";\t\t\t \t\t\r\n            }\t\r\n            \r\n            \r\n            let filterData=JSON.parse(finalData);\r\n\r\n            if(plantid!=-1)\r\n                filterData= filterData.filter(x=>x.PlantId==plantid);\r\n\r\n            if(stationId!=-1)\r\n                filterData= filterData.filter(x=>x.StationId==stationId)\r\n\r\n\t\t\treturn filterData;\r\n  }\r\n \r\n\t \r\n/*\r\n private handleError(error: any): Promise<any> {\r\n  console.error('An error occurred', error); // for demo purposes only\r\n  return Promise.reject(error.message || error);\r\n}\r\n*/\r\n\r\nprivate handleError(error: any)  {\r\n\tconsole.error('An error occurred', error); // for demo purposes only\r\n\t return null;\r\n  }\r\n\r\n\r\n\r\n  private CalculateMotorStatus(res,plantid,stationId)\r\n  {\r\n\t  \r\n\t  let stList=this.GetJsonData(res,plantid,stationId);\r\n\t \r\n\t  let Green =stList.filter(x=>x.Status=='Green').length;\r\n\t  let Red =stList.filter(x=>x.Status=='Red').length;\r\n\t  let Amber =stList.filter(x=>x.Status=='Amber').length;\t \r\n \r\n\t  let result = [\r\n\t\t['StationHealth', 'NumOfStation'],\r\n\t\t['Green',     Green],\r\n\t\t['Amber',     Amber],\r\n\t\t['Red',  Red]\r\n\t  ]  \t \r\n\t  return  result;\r\n\t   \r\n  }\r\n\r\n\r\n}\r\n\r\n \n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Services/MotorService.ts","import  {  Injectable }  from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n \r\nimport{Observable } from 'rxjs/Rx';\r\n  \r\n\r\n//the injectable attribute to generate the metadata to make the service available through \r\n//Dependency Injustion(DI) in other modules.\r\n\r\n\r\n@Injectable() \r\nexport class NotificationService\r\n{\r\n\t\r\n\tprivate static serviceInstance :NotificationService =null; \r\n\t\r\n\tconstructor(private http: Http) { \r\n\t\t \t\t\r\n\t }\r\n\r\n\t // Return the instance of the service\r\n\t public static getInstance(http: Http): NotificationService {\r\n\t\tif (NotificationService.serviceInstance === null) {\r\n\t\t\tNotificationService.serviceInstance = new NotificationService(http);\r\n\t\t}\r\n\t\treturn NotificationService.serviceInstance;\r\n\t  } \r\n\t \r\n   private NUrl='http://hclmotorstorageaccount.table.core.windows.net:80/Notifications?st=2017-09-05T16%3A18%3A00Z&se=2018-05-31T16%3A18%3A00Z&sp=raud&sv=2016-05-31&tn=notifications&sig=Zwc7HHmpHBdWoFgSU0mdNd8w8jLgigVKdAqijMwfGqQ%3D';\r\n  \r\n  \r\n    \r\n    public GetNotificationList(plantid:number,stationId:number,motorId:number) :Observable<any>  { \r\n        return this.http.get(this.NUrl)\t \r\n        .map(res => this.GetJsonData(res,plantid,stationId) );\r\n    }\r\n\r\n  \r\n    \r\n  \r\n\tprivate  GetJsonData(xmldata,plantid,stationId)\r\n\t{\r\n\t   \r\n         let jsonobject = xmldata.json()['value'] // [0] ['StationObeject'];\r\n\r\n         \r\n\r\n         if( jsonobject && jsonobject !== \"null\" && jsonobject !== \"undefined\" )\r\n\t\t\t{\r\n\t\t\t\tfor(let i=0 ;i <jsonobject.length;i++ )\r\n\t\t\t\t{\r\n                  //  alert(jsonobject[i]);\r\n                }\r\n            }\r\n         \r\n        return jsonobject;\r\n \r\n\t\t/* let finalData=\"[\";\r\n\r\n\t\t if( jsonobject && jsonobject !== \"null\" && jsonobject !== \"undefined\" )\r\n\t\t\t{\r\n\t\t\t\tfor(let i=0 ;i <jsonobject.length;i++ )\r\n\t\t\t\t{\r\n                    \r\n                  //  let stObject= JSON.parse( jsonobject[i]['MotorObeject']);\r\n                   \r\n\t\t\t\t\tlet Status= jsonobject[i]['Status'];\r\n\t\t\t\t\tlet Id= jsonobject[i]['Id'];\r\n                    let StationId= jsonobject[i]['StationId'];\r\n                    let MotorId= jsonobject[i]['Id'];\r\n                    let PlantId= jsonobject[i]['PlantId'];\r\n                    let Subject= jsonobject[i]['Subject'];\r\n                    let Content= jsonobject[i]['Content'];\r\n                   \r\n\t\t\t\t/*\tif(( stObject && stObject !== \"null\" && stObject !== \"undefined\" ) )\r\n\t\t\t\t\r\n                        \r\n                     \r\n        finalData =finalData+ '{\"MotorId\":'+ MotorId + '\",\"PlantId\" :'+PlantId;\r\n        finalData =finalData+', \"Status\":\"'+Status + '\",\"StationId\" :'+StationId;\r\n        finalData =finalData+'\",\"Id\":'+ Id+', \"Description\":\"'+ \"stObject.Description\"+'\", \"StationId\":'+StationId +'  }';\r\n        \r\n\t\t\t\t\t\t\tif(i < jsonobject.length-1 )\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfinalData =finalData+\",\";\r\n\t\t\t\t\t\t\t\t}\r\n              \r\n                \r\n               // alert(finalData);\r\n\t\t\t\t\t}\r\n\t\t\t\tfinalData =finalData+\"]\";\t\t\t \t\t\r\n            }\t\r\n            \r\n            \r\n            let filterData=JSON.parse(finalData);\r\n\r\n            if(plantid!=-1)\r\n                filterData= filterData.filter(x=>x.PlantId==plantid);\r\n\r\n            if(stationId!=-1)\r\n                filterData= filterData.filter(x=>x.StationId==stationId)\r\n\r\n            return filterData;\r\n            */\r\n  }\r\n \r\n\t \r\n/*\r\n private handleError(error: any): Promise<any> {\r\n  console.error('An error occurred', error); // for demo purposes only\r\n  return Promise.reject(error.message || error);\r\n}\r\n*/\r\n\r\nprivate handleError(error: any)  {\r\n\tconsole.error('An error occurred', error); // for demo purposes only\r\n\t return null;\r\n  }\r\n\r\n\r\n\r\n   \r\n\r\n\r\n}\r\n\r\n \n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Services/NotificationService.ts","import  { Injectable }  from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Plant} from  '../Entities/Plant';\r\n\r\n\r\n//the injectable attribute to generate the metadata to make the service available through \r\n//Dependency Injustion(DI) in other modules.\r\n@Injectable()\r\nexport class PlantService\r\n{\r\n\t\r\n\t constructor(private http: Http) { }\r\n\t \r\n   private PlantUrl='/plantlist.json'\r\n   private PlantUrl2='https://hclmotorstorageaccount.table.core.windows.net/Stations(PartitionKey=\"pk1\",RowKey=\"rk1\")?$select=StationObeject&st=2017-08-30T08%3A15%3A00Z&se=2017-10-21T08%3A15%3A00Z&sp=raud&sv=2016-05-31&tn=stations&sig=4GLyLYg3YBSZqR5TydJ5nK7QqzuZRc6x9%2B52RFih%2B9M%3D';\r\n\r\n   plantlist : Plant[];\r\n   plant :Plant;\r\n \r\n\tGetPlantAsync() : Promise<Plant[]> {\r\n\t\t return this.http.get(this.PlantUrl)\t\t     \r\n             .toPromise()\r\n\t\t\t  .then(response => response.json() as Plant[] ) \r\n             .catch(this.handleError);\r\n\t}\r\n\r\n\t \r\n\r\n\tGetPlantById(id:number) :Promise<Plant>  {\r\n\t\t   \r\n\t\treturn this.http.get(this.PlantUrl)\t\t     \r\n\t\t.toPromise()\r\n\t\t .then(response => this.extractData(response,id) )\t\r\n\t\t//.then(response => response.json() as Hero[]\r\n\t\t.catch(this.handleError);\r\n         \r\n\t}\r\n\t\r\n\tprivate extractData(res,id)\r\n\t{\r\n\t\tlet data =res.json().find(x=>x.Id==id);\r\n\t   \r\n\t\treturn  data as Plant;\r\n\t}\r\n\r\n\tprivate handleError(error: any): Promise<any> {\r\n  console.error('An error occurred', error); // for demo purposes only\r\n  return Promise.reject(error.message || error);\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Services/PlantService.ts","import  {  Injectable }  from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map'; \r\nimport{Observable } from 'rxjs/Rx';\r\n \r\n\r\n//the injectable attribute to generate the metadata to make the service available through \r\n//Dependency Injustion(DI) in other modules.\r\n@Injectable()\r\nexport class StationService\r\n{\r\n\t\r\n\tprivate static serviceInstance :StationService =null; \r\n\tprivate testv :string;\r\n\t constructor(private http: Http) { \r\n\t\t \t\t\r\n\t }\r\n\r\n\t // Return the instance of the service\r\n\t public static getInstance(http: Http): StationService {\r\n\t\tif (StationService.serviceInstance === null) {\r\n\t\t\tStationService.serviceInstance = new StationService(http);\r\n\t\t}\r\n\t\treturn StationService.serviceInstance;\r\n\t  } \r\n\t \r\n  // private StatiotUrl='/stationlist.json'\r\n   //private StatiotUrl='https://hclmotorstorageaccount.table.core.windows.net/Stations?$select=StationObeject&st=2017-08-30T08%3A15%3A00Z&se=2017-10-21T08%3A15%3A00Z&sp=raud&sv=2016-05-31&tn=stations&sig=4GLyLYg3YBSZqR5TydJ5nK7QqzuZRc6x9%2B52RFih%2B9M%3D';\r\n   private StatiotUrl='https://hclmotorstorageaccount.table.core.windows.net/Stations?st=2017-08-30T08%3A15%3A00Z&se=2017-10-21T08%3A15%3A00Z&sp=raud&sv=2016-05-31&tn=stations&sig=4GLyLYg3YBSZqR5TydJ5nK7QqzuZRc6x9%2B52RFih%2B9M%3D';  \r\n   \r\n    \r\n\t     GetStationListforPlant(plantid:number) :Observable<any>  { \r\n\t\t\t  return this.http.get(this.StatiotUrl)\t \r\n\t\t\t   .map(res => this.GetJsonData(res,plantid) );\r\n\t\t  }\r\n\r\n\t\t  public getStationStatus(plantid:number):Observable<any>{ \t \r\n\t\t\treturn this.http.get(this.StatiotUrl)\r\n\t\t\t.map(res=>this.CalculateMotorStatus(res,plantid));\r\n\t\t }\r\n\t\t \r\n  \r\n\tprivate  GetJsonData(xmldata,plantid)\r\n\t{\r\n\t   \r\n\t\t let jsonobject = xmldata.json()['value'];\r\n \r\n\t\t let finalData=\"[\";\r\n\r\n\t\t if( jsonobject && jsonobject !== \"null\" && jsonobject !== \"undefined\" )\r\n\t\t\t{\r\n\t\t\t\tfor(let i=0 ;i <jsonobject.length;i++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tlet stObject= JSON.parse( jsonobject[i]['StationObeject']);\r\n\t\t\t\t\tlet status= jsonobject[i]['Status'];\r\n\t\t\t\t\tlet RI= jsonobject[i]['RI'];\r\n\t\t\t\t\tlet StationId= jsonobject[i]['StationId'];\r\n\r\n\t\t\t\t\tif(( stObject && stObject !== \"null\" && stObject !== \"undefined\" ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t/*\tfinalData =finalData+ stObject;\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t//\t\tfinalData =finalData+ \t'{\"Id\": 6, \"StationName\": \"Station A\",\"PlantId\" :\"2\", \"Status\":\"Green\",\"RI\":\"4\" }';\t\t\r\n\t\t\t             finalData =finalData+ '{\"Id\":'+ StationId +', \"StationName\":\"'+ stObject.StationName;\r\n\t\t\t\t\t\t finalData =finalData+ '\",\"PlantId\" :'+stObject.PlantId+', \"Status\":\"'+status\r\n\t\t\t\t\t\t finalData =finalData+'\",\"RI\":'+ RI+' }';\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\tif(i < jsonobject.length-1 )\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfinalData =finalData+\",\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\tfinalData =finalData+\"]\";\t\t\t \t\t\r\n\t\t\t}\r\n\t\t \t \t    \r\n\t\t\treturn JSON.parse(finalData).filter(x=>x.PlantId==plantid);\r\n\t}\r\n \r\n\t \r\n/*\r\n private handleError(error: any): Promise<any> {\r\n  console.error('An error occurred', error); // for demo purposes only\r\n  return Promise.reject(error.message || error);\r\n}\r\n*/\r\n\r\nprivate handleError(error: any)  {\r\n\tconsole.error('An error occurred', error); // for demo purposes only\r\n\t return null;\r\n  }\r\n\r\n\r\n\r\n  private CalculateMotorStatus(res,plantid)\r\n  {\r\n\t  \r\n\t  let stList=this.GetJsonData(res,plantid);\r\n\t \r\n\t  let Green =stList.filter(x=>x.Status=='Green').length;\r\n\t  let Red =stList.filter(x=>x.Status=='Red').length;\r\n\t  let Amber =stList.filter(x=>x.Status=='Amber').length;\t \r\n \r\n\t  let result = [\r\n\t\t['StationHealth', 'NumOfStation'],\r\n\t\t['Green',     Green],\r\n\t\t['Amber',     Amber],\r\n\t\t['Red',  Red]\r\n\t  ]  \t \r\n\t  \r\n\t  return  result;\r\n\r\n\t \r\n\t   \r\n  }\r\n\r\n\r\n}\r\n\r\n \n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/Services/StationService.ts","module.exports = \"\\n \\n \\n <div class=\\\"container\\\">\\n \\n    \\n  \\n     <div id='app-header' class=\\\"panel panel-primary \\\">\\n          <div class=\\\"panel-heading bg-warning\\\"> \\n              <a    routerLink=\\\"/plant\\\"   >\\n        <h2 class='text-center '>{{title}}</h2></a>\\n        </div>    \\n\\n        <div class=\\\"panel-body body-container\\\" style=\\\"backGround-color:#e6ffff\\\" >\\n           \\n            <router-outlet></router-outlet>\\n        </div>   \\n\\n        <div id='footer' class=\\\"panel-footer\\\">\\n            <div >\\n                    \\n            </div>    \\n\\n                </div>\\n\\n\\n     </div>\\n\\n     \\n  \\n  \\n  \\n  \\n   \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, ViewEncapsulation  } from '@angular/core'; \nimport { OnInit} from '@angular/core';  \n\n \n\nimport { hclplantdashboard } from './Components/Plant/hclplantdashboard';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./CSS/app.component.css'] ,\n  encapsulation: ViewEncapsulation.None    \n  \n})\n      // Appcomponent class implmenting an interface 'OnInit' having one method 'ngOnInit'\n\t  // learn more about hooks  : https://angular.io/guide/lifecycle-hooks \n\t  \nexport class AppComponent implements OnInit  {\n     title = 'Plant Health Dashboard';  \n\n         \n     \n     ngOnInit(): void {      \n              \n    }\n   \n}\n\n \n\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/app.component.ts","import { AppComponent } from './app.component';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpModule }    from '@angular/http'; \n \n import { RouterModule, Routes } from '@angular/router';\n\n \n import { hclplantdashboard } from './Components/Plant/hclplantdashboard';\n import { PlantComponent } from './Components/Plant/PlantComponent';\n import { StationComponent } from './Components/Station/StationComponent';\n import {  PlantService} from './Services/PlantService';\n import {  StationService} from './Services/StationService';\n import {  MotorService} from './Services/MotorService';\n import {  NotificationService} from './Services/NotificationService';\n\n\n import { HashLocationStrategy, LocationStrategy } from '@angular/common'; \nimport { BaseChartComponent } from './Components/base-chart/base-chart.component';\nimport { PiChartComponent } from './Components/pi-chart/pi-chart.component';\nimport { MotorStatusChartComponent } from './Components/motor-status-chart/motor-status-chart.component';\nimport { NotificationsComponent } from './Components/notifications/notifications.component';\nimport { StationlistComponent } from './components/stationlist/stationlist.component';\n\n\n \n const appRoutes: Routes = [\n  {\n     path: 'plant',\n      component: hclplantdashboard,\n      data :{ }\n     },\n  \n  { path: '',\n    redirectTo: '/plant',\n    pathMatch: 'full'\n  },\n  { path: 'station/:id',      component: StationComponent },\n  \n  /*,\n  { path: '**', component: PageNotFoundComponent }*/\n];\n\n\n@NgModule({\n  declarations: [\n  AppComponent,\t \n  hclplantdashboard,\n  PlantComponent,\n  StationComponent, \n  BaseChartComponent,\n  PiChartComponent,\n  MotorStatusChartComponent,\n  NotificationsComponent,\n  StationlistComponent\n  ],\n  imports: [\n    BrowserModule,\n\tFormsModule,\n  HttpModule,\n  RouterModule.forRoot(\n    appRoutes,\n    { enableTracing: true } // <-- debugging purposes only\n  )\n\t\n/*\t AdBannerComponent,\n     HeroJobAdComponent,\n     HeroProfileComponent,\n     AdDirective,*/\n\t \n  ],\n  providers: [PlantService,StationService,NotificationService,MotorService,{provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/app.module.ts","module.exports = \"<div *ngIf=\\\"stationlist\\\" >                 \\n    <div class=\\\"panel panel-default col-md-2 nopadding scrollItem \\\"   id={{station.Id}} *ngFor=\\\" let station of stationlist\\\"  >\\n \\n   <div  data-toggle=\\\"popover\\\" title=\\\"\\\" data-placement=\\\"\\\" data-content=\\\"\\\">    \\n            \\n            \\n           <a [routerLink]=\\\"['/station', station.Id]\\\" >\\n             <div class=\\\"panel-heading text-center\\\">  {{station.StationName}}</div>\\n           </a>\\n      <div class=\\\"panel-body\\\">\\n            <span class=\\\"circle {{station.Status}} \\\"></span>  \\n            <span class='status-padding ' > RI : {{station.RI}} </span>\\n\\n\\n      </div>\\n           \\n      <div class=\\\"panel-footer\\\"></div>   \\n</div>    \\n   \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/components/stationlist/stationlist.component.html\n// module id = ../../../../../src/app/components/stationlist/stationlist.component.html\n// module chunks = 1","import { Component, OnInit, Input } from '@angular/core';\nimport {  StationService} from '../../Services/StationService';\n\n@Component({\n  selector: 'stations',\n  templateUrl: './stationlist.component.html' \n})\nexport class StationlistComponent implements OnInit {\n\n  constructor (private ss :StationService)\n  {       \n     \n  }\n      \n  @Input() currentPlantId : number;    \n  stationlist : any;\n       \n  ngOnInit(): void {      \n    \n     if(this.currentPlantId== null)\n     { \n          this.currentPlantId=2;   \n     }      \n     this.GetStationListForPlant();           \n  }\n   \n GetStationListForPlant() :void\n  {                \n  this.ss.GetStationListforPlant(this.currentPlantId).subscribe(data => this.stationlist = data); \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/app/components/stationlist/stationlist.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// E:/Rajendra/Azure-IOT/HCLMotorWebApp/src/main.ts"],"sourceRoot":"webpack:///"}